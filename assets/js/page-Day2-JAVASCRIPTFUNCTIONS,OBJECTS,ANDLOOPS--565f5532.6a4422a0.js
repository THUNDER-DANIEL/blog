(window.webpackJsonp=window.webpackJsonp||[]).push([[34],{490:function(e,n,t){"use strict";t.r(n);var a=t(2),s=Object(a.a)({},(function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"day-2-javascript-functions-objects-and-loops"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#day-2-javascript-functions-objects-and-loops"}},[e._v("#")]),e._v(" Day 2 - JAVASCRIPT FUNCTIONS, OBJECTS, AND LOOPS")]),e._v(" "),t("p",[e._v("What are the three ways to syntactically write a function? What are the differences in how the function acts (if any)?")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[e._v("A Function Declaration defines a named function.\nFunction definition is hoisted, thus allowing the function to be used before it is defined.\nA Function Expressions defines a named or anonymous function.Function Expressions are not hoisted, and therefore cannot be used before they are defined.\nAn Arrow Function Expression is a shorter syntax for writing function expressions. Arrow functions do not create their own this value.\n")])])]),t("p",[e._v("What is the difference between Parameters and Arguments?")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[e._v(" Difference between parameters and arguments: Function parameters are the names listed in the function's definition. Function arguments are the real values passed to the function. Parameters are initialized to the values of the arguments supplied.\n")])])]),t("p",[e._v("What are higher order functions? Can you provide an example?")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[e._v("When a function accepts another function as a parameter, or returns a function, it is called a higher-order function.\n\nfunction outside(inside()){\n\n}")])])])])}),[],!1,null,null,null);n.default=s.exports}}]);