(window.webpackJsonp=window.webpackJsonp||[]).push([[79],{512:function(e,s,t){"use strict";t.r(s);var n=t(2),a=Object(n.a)({},(function(){var e=this,s=e.$createElement,t=e._self._c||s;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"intro-to-server-side-concerns-with-javascript"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#intro-to-server-side-concerns-with-javascript"}},[e._v("#")]),e._v(" Intro to Server side concerns with JavaScript")]),e._v(" "),t("p",[t("strong",[e._v("1.")]),e._v(" What do the letters of the acronym "),t("code",[e._v("CRUD")]),e._v(" stand for?\n")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("        Create, Read, Update, and Delete (CRUD)\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])]),t("p",[t("strong",[e._v("2.")]),e._v(" Each action that "),t("code",[e._v("CRUD")]),e._v(" represents maps to an HTTP request. What HTTP request does each "),t("code",[e._v("CRUD")]),e._v(" action correspond to?\n")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("                Create >POST\n                Read   >GET\n                Update >PUT\n                Delete >DELETE\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br")])]),t("p",[t("strong",[e._v("3.")]),e._v(" What does "),t("code",[e._v("ORM")]),e._v(" stand for? Which "),t("code",[e._v("ORM")]),e._v(" do we use when interacting with MongoDB\n")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("                Objectâ€“relational mapping\n                Mongoose\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br")])]),t("p",[t("strong",[e._v("4.")]),e._v(" Which two "),t("code",[e._v("HTTP")]),e._v(" request types include a body?\n")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("                GET and POST\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])]),t("p",[t("strong",[e._v("5.")]),e._v(" In a/an ____(1) ___ coding model, when you call a function, it returns only when the action has finished and stops your program for the time the action takes. Likewise in a/an ______(2) _______ coding model, multiple things are allowed to happen at one time. When you perform an action, your program continues to run.  Fill in the blanks.\n")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("                1-Synchronous\n                2-Asynchronicity\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br")])]),t("p",[t("strong",[e._v("6.")]),e._v(" Fill in the missing piece of this snippet of code.")]),e._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("import")]),e._v(" ____1__ "),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("from")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"___2____"')]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("let")]),e._v(" Schema "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" _____3___"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("Schema"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br")])]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('                1-mongoose\n                2-"mongoose"\n                3-mongoose\n')])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br")])]),t("p",[t("strong",[e._v("7.")]),e._v(" What is middleware?\n")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("Middleware is basically a \nfunction that will the receive the Request and Response objects, just like your route Handlers do. \n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br")])]),t("p",[t("strong",[e._v("8.")]),e._v(" The ______  1 pipeline delivers information from the client while the ______2  pipeline returns it. Fill in the blanks.\n")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("        1-Request\n        2-Response\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br")])]),t("p",[t("strong",[e._v("9.")]),e._v("\nDemonstrate the pattern that is used to include a request query with the client's "),t("code",[e._v("HTTP")]),e._v(" request providing the property "),t("code",[e._v("tag")]),e._v(" and the value "),t("code",[e._v("winter")]),e._v(".\n")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("        async findAll(query){\n                let res = await dbContext.find({winter})\n                }\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br")])])])}),[],!1,null,null,null);s.default=a.exports}}]);