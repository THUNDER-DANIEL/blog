(window.webpackJsonp=window.webpackJsonp||[]).push([[32],{502:function(e,t,s){"use strict";s.r(t);var a=s(2),n=Object(a.a)({},(function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("h1",{attrs:{id:"day-2-http-requests-continued"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#day-2-http-requests-continued"}},[e._v("#")]),e._v(" Day 2 - HTTP REQUESTS CONTINUED")]),e._v(" "),s("p",[e._v("Read Asynchronous Code > JavaScript Promises and answer the following questions")]),e._v(" "),s("p",[e._v("What are the three states of a Promise?")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[e._v("    Pending / Resolved / Rejected\n")])])]),s("p",[e._v('How do promises seek to resolve the issues of "callback hell"?')]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[e._v("    Helps clean and organized code by using chaining.\n")])])]),s("p",[e._v("What is the difference between .then() and .catch()?")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[e._v("    If the Promise fails then we will use the catch() - then() is used then the Promise doesn't fail. When the Pormise is resolved.\n")])])]),s("p",[e._v("https://github.com/THUNDER-DANIEL/spring21-gregslist-mvc")])])}),[],!1,null,null,null);t.default=n.exports}}]);