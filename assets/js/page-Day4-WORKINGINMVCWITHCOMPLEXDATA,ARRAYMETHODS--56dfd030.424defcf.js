(window.webpackJsonp=window.webpackJsonp||[]).push([[60],{498:function(e,t,a){"use strict";a.r(t);var s=a(2),n=Object(s.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"day-4-working-in-mvc-with-complex-data-array-methods"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#day-4-working-in-mvc-with-complex-data-array-methods"}},[e._v("#")]),e._v(" Day 4 - WORKING IN MVC WITH COMPLEX DATA, ARRAY METHODS")]),e._v(" "),a("p",[e._v("Read Advancing with JS > The Observer Pattern and answer the following questions")]),e._v(" "),a("p",[e._v("What problems does the Observer Pattern seek to solve?")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[e._v("    Observer is a design pattern in which an object maintains a list of objects depending on it (observers), automatically notifying them of any changes to state.\n")])])]),a("p",[e._v("What are the three mechanisms of the observer pattern?")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[e._v("    Observer pattern has three tasks: 1:Provide methods to register and remove observer. 2:Maintains a list of its observers/subscribers.\n    3:And notify them automatically when any state changes\n")])])]),a("p",[e._v("Review the code generated from the bcw-template and reflect on the proxy objects from yesterday, and your understanding of the observer pattern today. With this knowledge, explain how the magic of the bcw-template uses these two concepts to manage and update the dom.")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[e._v("    They are the lookout for template listening and making all the changes necessary within its scope of it's responiblilty.\n")])])]),a("p",[e._v("https://github.com/THUNDER-DANIEL/sportingGoods")])])}),[],!1,null,null,null);t.default=n.exports}}]);