(window.webpackJsonp=window.webpackJsonp||[]).push([[52],{504:function(e,t,s){"use strict";s.r(t);var a=s(2),r=Object(a.a)({},(function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("h1",{attrs:{id:"day-4-audio-video-tags-and-review"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#day-4-audio-video-tags-and-review"}},[e._v("#")]),e._v(" Day 4 - AUDIO/VIDEO TAGS AND REVIEW")]),e._v(" "),s("p",[e._v("Read Asynchronous Code > What is REST and answer the following questions")]),e._v(" "),s("p",[e._v("What does REST stand for, and in simple terms what does it mean?")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[e._v("    RE-presentational State Transfer. It means when a RESTful API is called, the server will transfer to the client a representation of the state of the requested resource.\n")])])]),s("p",[e._v("What does Stateless mean?")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[e._v("    Stateless means the server does not remember anything about the user who uses the API. It doesn't remember if the user of the API already sent a GET request for the same resource in the past, it doesn't remember which resources the user of the API requested before, and so on.\n")])])]),s("p",[e._v("What URL pattern is used when writing a RESTful API?")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[e._v("    HTTP headers (e.g. Content-Type: and Accept: )\n    GET parameters (e.g. &format=json )\n    resource label (e.g. /foo. json )\n")])])]),s("p",[e._v("https://github.com/ThurberDaniel/iMusic-Fun")])])}),[],!1,null,null,null);t.default=r.exports}}]);